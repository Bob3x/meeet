{"version":3,"file":"static/js/77.8e3a5efd.chunk.js","mappings":"iMAMA,MAsFA,EAtFyBA,IAAiB,IAAhB,OAAEC,GAAQD,EAChC,MAAOE,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,KAC1BC,EAAWC,IAAgBF,EAAAA,EAAAA,WAAS,GACrCG,EAAS,CAAC,QAAS,aAAc,OAAQ,SAAU,cAEzDC,EAAAA,EAAAA,YAAU,KAWN,IACIF,GAAa,GACbH,EAXaI,EAAOE,KAAKC,IACrB,MAAMC,EAAiBV,EAAOW,QAAQC,GAAUA,EAAMC,QAAQC,SAASL,KACvE,MAAO,CACHM,KAAMN,EACNO,MAAON,EAAeO,OACzB,IAOT,CAAE,MAAOC,GACLC,QAAQD,MAAM,yBAA0BA,EAC5C,CAAC,QACGb,GAAa,EACjB,IACD,CAAC,GAAGL,MAEP,MAAMoB,EAAS,CACXC,MAAO,UACPC,WAAY,UACZC,KAAM,UACNC,OAAQ,UACRC,UAAW,WAqBnB,OAAIrB,GAAkBsB,EAAAA,EAAAA,KAAA,OAAAC,SAAK,0BACtB3B,EAAOiB,QAGRS,EAAAA,EAAAA,KAACE,EAAAA,EAAmB,CAACC,MAAM,MAAMC,OAAQ,IAAIH,UAC3CI,EAAAA,EAAAA,MAACC,EAAAA,EAAQ,CAAAL,SAAA,EACPD,EAAAA,EAAAA,KAACO,EAAAA,EAAG,CACFhC,KAAMA,EACNiC,QAAQ,QACRC,WAAW,EACXC,MA5BoBC,IAAwD,IAAvD,GAAEC,EAAE,GAAEC,EAAE,SAAEC,EAAQ,YAAEC,EAAW,QAAEC,EAAO,MAAEC,GAAON,EAC5E,MAAMO,EAASC,KAAKC,GAAK,IACnBC,EAASN,EACTO,EAAIV,EAAKS,EAASF,KAAKI,KAAKT,EAAWI,GAAU,KACjDM,EAAIX,EAAKQ,EAASF,KAAKM,KAAKX,EAAWI,GAAU,KAEvD,OAAOF,GACLhB,EAAAA,EAAAA,KAAA,QACEsB,EAAGA,EACHE,EAAGA,EACHE,WAAYJ,EAAIV,EAAK,QAAU,MAC/Be,iBAAiB,UAAS1B,SAEzB,GAAGrB,EAAOqC,OAAqB,IAAVD,GAAeY,QAAQ,QAE7C,IAAI,EAcFb,YAAa,IACbc,kBAAmB,IACnBC,eAAgB,EAAE7B,SAClB1B,EAAKO,KAAI,CAACiD,EAAOd,KACbjB,EAAAA,EAAAA,KAACgC,EAAAA,EAAI,CAELC,KAAMvC,EAAOqC,EAAM1C,MACnB6C,OAAO,UACPC,YAAa,GAHR,QAAQlB,UAOjBjB,EAAAA,EAAAA,KAACoC,EAAAA,EAAM,CACPC,MAAM,SACNC,cAAc,SACdC,OAAO,aACPnC,OAAQ,UA1BSJ,EAAAA,EAAAA,KAAA,OAAAC,SAAK,wBA6BN,C","sources":["components/EventGenresChart.js"],"sourcesContent":["// src/components/EventGenresChart.js\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { PieChart, Pie, Legend, Cell, ResponsiveContainer } from 'recharts';\r\n\r\n\r\nconst EventGenresChart = ({ events }) => {\r\n    const [data, setData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const genres = ['React', 'JavaScript', 'Node', 'jQuery', 'AngularJS'];\r\n\r\n    useEffect(() => {\r\n        const getData = () => {\r\n            const data = genres.map((genre) => {\r\n                const filteredEvents = events.filter((event) => event.summary.includes(genre));\r\n                return {\r\n                    name: genre, \r\n                    value: filteredEvents.length\r\n                }\r\n            })\r\n            return data;\r\n        }\r\n        try {\r\n            setIsLoading(true);\r\n            setData(getData());\r\n        } catch (error) {\r\n            console.error(\"Error displaying data:\", error);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }   \r\n    }, [`${events}`]);\r\n\r\n    const COLORS = {\r\n        React: '#1dd3b0',\r\n        JavaScript: '#8884d8',\r\n        Node: '#086375',\r\n        jQuery: '#16743f',\r\n        AngularJS: '#372b54'\r\n      };\r\n\r\nconst renderCustomizedLabel = ({ cx, cy, midAngle, outerRadius, percent, index }) => {\r\n    const RADIAN = Math.PI / 180;\r\n    const radius = outerRadius;\r\n    const x = cx + radius * Math.cos(-midAngle * RADIAN) * 1.07;\r\n    const y = cy + radius * Math.sin(-midAngle * RADIAN) * 1.07;\r\n\r\n    return percent ? (\r\n      <text\r\n        x={x}\r\n        y={y}\r\n        textAnchor={x > cx ? 'start' : 'end'}\r\n        dominantBaseline=\"central\"\r\n      >\r\n        {`${genres[index]} ${(percent * 100).toFixed(0)}%`}\r\n      </text>\r\n    ) : null;\r\n  }\r\n\r\nif (isLoading) return <div>Loading chart data...</div>;\r\nif (!events.length) return <div>No events to display</div>;\r\n\r\nreturn (\r\n    <ResponsiveContainer width=\"99%\" height={400}>\r\n      <PieChart>\r\n        <Pie\r\n          data={data}\r\n          dataKey=\"value\"\r\n          labelLine={false}\r\n          label={renderCustomizedLabel}\r\n          outerRadius={130}\r\n          animationDuration={500}\r\n          animationBegin={0} >\r\n         {data.map((entry, index) => (\r\n              <Cell \r\n              key={`cell-${index}`} \r\n              fill={COLORS[entry.name]} \r\n              stroke=\"#affc41\"\r\n              strokeWidth={2}\r\n              />\r\n            ))}\r\n            </Pie>\r\n          <Legend \r\n          align=\"center\" \r\n          verticalAlign=\"bottom\" \r\n          layout=\"horizontal\" \r\n          height={2} \r\n          />\r\n      </PieChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\n\r\nexport default EventGenresChart;"],"names":["_ref","events","data","setData","useState","isLoading","setIsLoading","genres","useEffect","map","genre","filteredEvents","filter","event","summary","includes","name","value","length","error","console","COLORS","React","JavaScript","Node","jQuery","AngularJS","_jsx","children","ResponsiveContainer","width","height","_jsxs","PieChart","Pie","dataKey","labelLine","label","_ref2","cx","cy","midAngle","outerRadius","percent","index","RADIAN","Math","PI","radius","x","cos","y","sin","textAnchor","dominantBaseline","toFixed","animationDuration","animationBegin","entry","Cell","fill","stroke","strokeWidth","Legend","align","verticalAlign","layout"],"sourceRoot":""}